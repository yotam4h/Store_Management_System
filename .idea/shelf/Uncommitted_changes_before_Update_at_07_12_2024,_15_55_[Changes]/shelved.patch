Index: src/com/storemanagement/admin/AdminService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.storemanagement.admin;\n\nimport com.storemanagement.utils.DatabaseConnection;\nimport com.storemanagement.utils.Constants.EmployeeRole;\nimport com.storemanagement.models.*;\n\nimport javax.xml.crypto.Data;\nimport java.sql.*;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class AdminService {\n\n    // Method to add a new employee\n    public boolean addEmployee(Employee employee) {\n\n        String query = \"INSERT INTO Employees (full_name, phone_number, role, branch_id) VALUES (?, ?, ?, ?)\";\n        try {\n            DatabaseConnection dbConnection = DatabaseConnection.getInstance();\n            PreparedStatement stmt = dbConnection.prepareStatementWithGeneratedKeys(query);\n\n            stmt.setString(1, employee.getFullName());\n            stmt.setString(2, employee.getPhoneNumber());\n            stmt.setString(3, employee.getRole().toString());\n            stmt.setInt(4, employee.getBranchId());\n\n            int rowsAffected = stmt.executeUpdate();\n            // if employee is added successfully, update the employee object with the new ID\n             if (rowsAffected > 0) {\n                 ResultSet rs = stmt.getGeneratedKeys();\n                 if (rs.next()) {\n                     employee.setId(rs.getInt(1));\n                 }\n                 return true;\n             }\n            return false;\n        } catch (SQLException e) {\n            System.out.println(\"Error adding employee: \" + e.getMessage());\n            return false;\n        }\n    }\n\n    // Method to remove an employee by ID\n    public boolean removeEmployee(int employeeId) {\n\n        String query = \"DELETE FROM Employees WHERE id = ?\";\n        try {\n            DatabaseConnection dbConnection = DatabaseConnection.getInstance();\n            PreparedStatement stmt = dbConnection.prepareStatement(query);\n\n            stmt.setInt(1, employeeId);\n\n            int rowsAffected = stmt.executeUpdate();\n\n            return rowsAffected > 0;\n\n        } catch (SQLException e) {\n            System.out.println(\"Error removing employee: \" + e.getMessage());\n            return false;\n        }\n    }\n\n    // Method to list all employees\n    public List<Employee> listEmployees() {\n        /*\n        String query = \"SELECT * FROM Employees\";\n        List<Employee> employees = new ArrayList<>();\n\n        try {\n            Connection connection = DatabaseConnection.getInstance().getConnection();\n            Statement stmt = connection.createStatement();\n            ResultSet rs = stmt.executeQuery(query);\n\n            while (rs.next()) {\n                Employee employee = new Employee(\n                        rs.getInt(\"id\"),\n                        rs.getString(\"full_name\"),\n                        rs.getString(\"phone_number\"),\n                        EmployeeRole.valueOf(rs.getString(\"role\")),\n                        rs.getInt(\"branch_id\")\n                );\n                employees.add(employee);\n            }\n\n        } catch (SQLException e) {\n            System.out.println(\"Error fetching employees: \" + e.getMessage());\n        }\n\n        return employees;\n        */\n\n        String query = \"SELECT * FROM Employees\";\n        List<Employee> employees = new ArrayList<>();\n\n        try {\n            DatabaseConnection dbConnection = DatabaseConnection.getInstance();\n            Statement stmt = dbConnection.createStatement();\n            ResultSet rs = stmt.executeQuery(query);\n\n            while (rs.next()) {\n                Employee employee = new Employee(\n                        rs.getInt(\"id\"),\n                        rs.getString(\"full_name\"),\n                        rs.getString(\"phone_number\"),\n                        EmployeeRole.valueOf(rs.getString(\"role\")),\n                        rs.getInt(\"branch_id\")\n                );\n                employees.add(employee);\n            }\n\n        } catch (SQLException e) {\n            System.out.println(\"Error fetching employees: \" + e.getMessage());\n        }\n\n        return employees;\n    }\n\n    // Method to add a new branch\n    public boolean addBranch(Branch branch) {\n        String query = \"INSERT INTO Branches (branch_name, branch_address, branch_phone) VALUES (?, ?, ?)\";\n        try {\n            DatabaseConnection dbConnection = DatabaseConnection.getInstance();\n            PreparedStatement stmt = dbConnection.prepareStatementWithGeneratedKeys(query);\n\n            stmt.setString(1, branch.getBranchName());\n            stmt.setString(2, branch.getBranchAddress());\n            stmt.setString(3, branch.getBranchPhone());\n\n            int rowsAffected = stmt.executeUpdate();\n            // if branch is added successfully, update the branch object with the new ID\n            if (rowsAffected > 0) {\n                ResultSet rs = stmt.getGeneratedKeys();\n                if (rs.next()) {\n                    branch.setBranchId(rs.getInt(1));\n                }\n                return true;\n            }\n            return false;\n        } catch (SQLException e) {\n            System.out.println(\"Error adding branch: \" + e.getMessage());\n            return false;\n        }\n    }\n\n    // Method to remove a branch by ID\n    public boolean removeBranch(int branchId) {\n        String query = \"DELETE FROM Branches WHERE branch_id = ?\";\n        try {\n            DatabaseConnection dbConnection = DatabaseConnection.getInstance();\n            PreparedStatement stmt = dbConnection.prepareStatement(query);\n\n            stmt.setInt(1, branchId);\n\n            int rowsAffected = stmt.executeUpdate();\n\n            return rowsAffected > 0;\n\n        } catch (SQLException e) {\n            System.out.println(\"Error removing branch: \" + e.getMessage());\n            return false;\n        }\n    }\n\n    // Method to list all branches\n    public List<Branch> listBranches() {\n        String query = \"SELECT * FROM Branches\";\n        List<Branch> branches = new ArrayList<>();\n\n        try {\n            DatabaseConnection dbConnection = DatabaseConnection.getInstance();\n            Statement stmt = dbConnection.createStatement();\n            ResultSet rs = stmt.executeQuery(query);\n\n            while (rs.next()) {\n                Branch branch = new Branch(\n                        rs.getInt(\"branch_id\"),\n                        rs.getString(\"branch_name\"),\n                        rs.getString(\"branch_address\"),\n                        rs.getString(\"branch_phone\")\n                );\n                branches.add(branch);\n            }\n\n        } catch (SQLException e) {\n            System.out.println(\"Error fetching branches: \" + e.getMessage());\n        }\n\n        return branches;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/storemanagement/admin/AdminService.java b/src/com/storemanagement/admin/AdminService.java
--- a/src/com/storemanagement/admin/AdminService.java	(revision 25ff96ece8a3db44772ea48a064de8b0358596d5)
+++ b/src/com/storemanagement/admin/AdminService.java	(date 1733579091694)
@@ -1,10 +1,8 @@
 package com.storemanagement.admin;
 
-import com.storemanagement.utils.DatabaseConnection;
-import com.storemanagement.utils.Constants.EmployeeRole;
 import com.storemanagement.models.*;
-
-import javax.xml.crypto.Data;
+import com.storemanagement.utils.Constants.EmployeeRole;
+import com.storemanagement.utils.DatabaseConnection;
 import java.sql.*;
 import java.util.ArrayList;
 import java.util.List;
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"b5a28ba9-eea2-402f-9cee-239289fc5705\" name=\"Changes\" comment=\"sql class files\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/dataSources.local.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/dataSources.local.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/sqldialects.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/sqldialects.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/Database/InsertTable.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Database/InsertTable.java\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"GitHubPullRequestSearchHistory\">{\n  &quot;history&quot;: [\n    {\n      &quot;state&quot;: &quot;OPEN&quot;,\n      &quot;assignee&quot;: &quot;RoeiA98&quot;,\n      &quot;author&quot;: &quot;yotam4h&quot;\n    }\n  ],\n  &quot;lastFilter&quot;: {\n    &quot;state&quot;: &quot;OPEN&quot;,\n    &quot;assignee&quot;: &quot;RoeiA98&quot;,\n    &quot;author&quot;: &quot;yotam4h&quot;\n  }\n}</component>\n  <component name=\"GithubPullRequestsUISettings\">{\n  &quot;selectedUrlAndAccountId&quot;: {\n    &quot;url&quot;: &quot;https://github.com/yotam4h/Store_Management_System.git&quot;,\n    &quot;accountId&quot;: &quot;e533682c-6afe-4695-826f-4bb735f3ee36&quot;\n  }\n}</component>\n  <component name=\"KubernetesApiPersistence\">{}</component>\n  <component name=\"KubernetesApiProvider\">{\n  &quot;isMigrated&quot;: true\n}</component>\n  <component name=\"ProblemsViewState\">\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 4\n}</component>\n  <component name=\"ProjectId\" id=\"2p7ravZhkzM0ARIY7xNZEaQSxqh\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;Application.AccessTable.executor&quot;: &quot;Run&quot;,\n    &quot;Application.CreateTable.executor&quot;: &quot;Run&quot;,\n    &quot;Application.Main.executor&quot;: &quot;Run&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\n    &quot;last_opened_file_path&quot;: &quot;/Users/Roei/Desktop/Study/Year 3/SemesterA/webprogramming/Store_Management_System&quot;,\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;,\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\n  },\n  &quot;keyToStringList&quot;: {\n    &quot;com.intellij.ide.scratch.ScratchImplUtil$2/New Scratch File&quot;: [\n      &quot;SQL&quot;\n    ]\n  }\n}</component>\n  <component name=\"RecentsManager\">\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src\" />\n      <recent name=\"$PROJECT_DIR$/lib\" />\n    </key>\n  </component>\n  <component name=\"SharedIndexes\">\n    <attachedChunks>\n      <set>\n        <option value=\"bundled-jdk-9823dce3aa75-fdfe4dae3a2d-intellij.indexing.shared.core-IU-243.21565.193\" />\n        <option value=\"bundled-js-predefined-d6986cc7102b-e768b9ed790e-JavaScript-IU-243.21565.193\" />\n      </set>\n    </attachedChunks>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"b5a28ba9-eea2-402f-9cee-239289fc5705\" name=\"Changes\" comment=\"\" />\n      <created>1732128021465</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1732128021465</updated>\n      <workItem from=\"1732193248796\" duration=\"191000\" />\n      <workItem from=\"1732193445730\" duration=\"80000\" />\n      <workItem from=\"1733570452040\" duration=\"65000\" />\n      <workItem from=\"1733570528137\" duration=\"30000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"test\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1732128237944</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1732128237944</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"lib file\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1732129330550</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1732129330550</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"lib file\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1732129527456</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1732129527456</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"lib file\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1732130664895</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1732130664895</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"lib file\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1732130905689</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1732130905689</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"sql class files\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1732131454507</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1732131454507</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"sql class files\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1732131713608</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1732131713608</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"sql class files\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1732142808865</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1732142808865</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"9\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State>\n              <option name=\"FILTERS\">\n                <map>\n                  <entry key=\"branch\">\n                    <value>\n                      <list>\n                        <option value=\"origin/main\" />\n                      </list>\n                    </value>\n                  </entry>\n                </map>\n              </option>\n            </State>\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"test\" />\n    <MESSAGE value=\"lib file\" />\n    <MESSAGE value=\"sql class files\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"sql class files\" />\n  </component>\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\n    <expand />\n    <select />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 25ff96ece8a3db44772ea48a064de8b0358596d5)
+++ b/.idea/workspace.xml	(date 1733579730816)
@@ -5,9 +5,7 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="b5a28ba9-eea2-402f-9cee-239289fc5705" name="Changes" comment="sql class files">
-      <change beforePath="$PROJECT_DIR$/.idea/dataSources.local.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/dataSources.local.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/sqldialects.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/sqldialects.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Database/InsertTable.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Database/InsertTable.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/com/storemanagement/admin/AdminService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/storemanagement/admin/AdminService.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -52,26 +50,30 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;Application.AccessTable.executor&quot;: &quot;Run&quot;,
-    &quot;Application.CreateTable.executor&quot;: &quot;Run&quot;,
-    &quot;Application.Main.executor&quot;: &quot;Run&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
-    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
-    &quot;last_opened_file_path&quot;: &quot;/Users/Roei/Desktop/Study/Year 3/SemesterA/webprogramming/Store_Management_System&quot;,
-    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
-    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;,
-    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "Application.AccessTable.executor": "Run",
+    "Application.CreateTable.executor": "Run",
+    "Application.Main.executor": "Run",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "RunOnceActivity.git.unshallow": "true",
+    "git-widget-placeholder": "main",
+    "kotlin-language-version-configured": "true",
+    "last_opened_file_path": "/Users/Roei/Desktop/Study/Year 3/SemesterA/webprogramming/Store_Management_System",
+    "node.js.detected.package.eslint": "true",
+    "node.js.detected.package.tslint": "true",
+    "node.js.selected.package.eslint": "(autodetect)",
+    "node.js.selected.package.tslint": "(autodetect)",
+    "nodejs_package_manager_path": "npm",
+    "settings.editor.selected.configurable": "preferences.pluginManager",
+    "vue.rearranger.settings.migration": "true"
   },
-  &quot;keyToStringList&quot;: {
-    &quot;com.intellij.ide.scratch.ScratchImplUtil$2/New Scratch File&quot;: [
-      &quot;SQL&quot;
+  "keyToStringList": {
+    "com.intellij.ide.scratch.ScratchImplUtil$2/New Scratch File": [
+      "SQL"
     ]
   }
-}</component>
+}]]></component>
   <component name="RecentsManager">
     <key name="MoveFile.RECENT_KEYS">
       <recent name="$PROJECT_DIR$/src" />
@@ -98,6 +100,7 @@
       <workItem from="1732193445730" duration="80000" />
       <workItem from="1733570452040" duration="65000" />
       <workItem from="1733570528137" duration="30000" />
+      <workItem from="1733579349101" duration="381000" />
     </task>
     <task id="LOCAL-00001" summary="test">
       <option name="closed" value="true" />
